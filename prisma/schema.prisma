generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("MYSQL_URL")
  relationMode = "prisma"
}

model CartItem {
  cart_item_id String   @id @default(cuid())
  quantity     Int?
  total_amount Decimal? @db.Decimal(10, 2)
  cart_id      String
  product_id   String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  cart         Cart     @relation(fields: [cart_id], references: [cart_id], onDelete: NoAction, onUpdate: NoAction, map: "CartItem_ibfk_1")
  product      Product  @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "CartItem_ibfk_2")

  @@index([cart_id], map: "cart_id")
  @@index([product_id], map: "product_id")
}

model Cart {
  cart_id     String       @id @default(cuid())
  status      cart_status?
  customer_id String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  cart_items  CartItem[]
  customer    Customer     @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "Cart_ibfk_1")

  @@index([customer_id], map: "customer_id")
}

model Customer {
  customer_id String            @id @default(cuid())
  username    String            @db.VarChar(255)
  email       String            @unique(map: "email") @db.VarChar(255)
  password    String            @db.VarChar(255)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  orders      Order[]
  cart        Cart?
  addresses   CustomerAddress[] 
}

model CustomerAddress {
  address_id  String   @id @default(cuid())
  country     String   @db.VarChar(255)
  full_name   String   @db.VarChar(255)
  phone       String   @db.VarChar(15)
  pincode     String   @db.VarChar(10)
  flat_no     String   @db.VarChar(255)
  street      String   @db.VarChar(255)
  city        String   @db.VarChar(255)
  state       String   @db.VarChar(255)
  default     Boolean  @default(false)
  customer_id String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  customer    Customer @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "CustomerAddress_ibfk_1")
  orders      Order[]

  @@index([customer_id], map: "customer_id")
}

model OrderItem {
  order_item_id String   @id @default(cuid())
  total_amount  Decimal  @db.Decimal(10, 2)
  quantity      Int
  order_id      String
  product_id    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  order         Order    @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "OrderItem_ibfk_1")
  product       Product  @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "OrderItem_ibfk_2")

  @@index([order_id], map: "order_id")
  @@index([product_id], map: "product_id")
}

model Order {
  order_id       String          @id @default(cuid())
  address_id     String          @db.VarChar(255)
  payment_method payment_method
  order_amount   Decimal         @db.Decimal(10, 2)
  status         order_status?
  customer_id    String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  order_items    OrderItem[]
  customer       Customer        @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "Order_ibfk_1")
  address        CustomerAddress @relation(fields: [address_id], references: [address_id], onDelete: NoAction, onUpdate: NoAction, map: "Order_ibfk_2")

  @@index([customer_id], map: "customer_id")
  @@index([address_id], map: "address_id")
}

model Product {
  product_id  String      @id @default(cuid())
  name        String      @db.VarChar(255)
  description String      @db.VarChar(1000)
  price       Decimal     @db.Decimal(10, 2)
  image_url   String      @db.VarChar(255)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cart_items  CartItem[]
  order_items OrderItem[]

  @@fulltext([name])
  @@fulltext([name, description])
}

enum cart_status {
  active
  completed
}

enum order_status {
  pending
  processing
  shipped
  delivered
  cancelled
}

enum payment_method {
  cash
  card
}
